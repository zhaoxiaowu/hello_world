redis实战

redis是一个nosql（not only sql）数据库  非关系型数据库    以键值对存储数据
文档数据库mongoDB

redis是一个  key-value存储系统   为了保证效率，数据都是缓存在内存中的。
redis会周期性的把更新的数据写在磁盘或者把修改操作追加到记录文件。

key-value更加重对海量数据存取的性能、分布式、扩展支持上。

为什么选用key-value
1.大规模的互联网应用

对于大量用户并发产生的大数据 简单升级服务是不行的。

（1）关系型数据库,对数据库的垂直和水平切割将整个数据库部署到一个集群上
（2）采用key-value形式存储

2.云存储  
 key-value是唯一的解决方法


key-value最大的特点是它的扩展性
1.支持及大数据的存储
   它的分布式架构决定只要足够多的机器，就能存储更多的数据。
2.支持很大的并发查询  几千个     关系型：几百个

特点：
只支持简单的操作  如：GET    SET
分布式：多台机器同时存储数据和状态    彼此交换信息保持数据一致 可视为
完整的存储系统。
数据一致：所有数据都是同步跟新的

新浪Redis部署场景：
1.应用程序直接访问
2.应用程序直接访问redis，出错访问MySQl
浏览器计数 redis


REDIS
1 数据结构
list       set      sorted set    hashs   提供原子操作
2.持久化
3.主从同步
3.性能

使用场景
开创一种新的数据存储思路    使用redis 我们不用面对功能单调的数据库

1，去最新的N条数据

2. 排行榜应用，取TOP操作

3.精确设定过期时间的应用 

4.计数器应用

5.队列

6.缓存

作者  数据结构数据库

hash类型 适合存储对象
省内存 是因为zipmap存储   当field数量多是，为替换成hash

list双向链表s
双链表也是由节点组成，它的每个数据结点中都有两个指针，
分别指向直接后继和直接前驱
push pop 可以作为堆栈

set通过hash tables实现 会随添加自动调整大小

sorted set  通过hashtable 和skiplist  排序  作为索引的方式来使用

Spring Data Redis   提供在spring停用中通过简单的配置访问redis服务，对redis 底层开发包进行高度封装

spring data redis 针对jedis提供以下功能
1.连接池自动管理，提供一个高度封装的“RedisTemplate”类
2.针对jedis客户端中大量使用api进行归类封装，将同一操作类型封装为operation接口
Value  set zset  hash list     ~~operation
