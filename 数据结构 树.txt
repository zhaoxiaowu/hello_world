树是节点的有限集合

孩子 度  叶子（终端节点）   根（非终端节点）  有序树 无序树  
祖先  子孙

结点深度  树的深度 森林

二叉树 ：所有节点的度都小于等于二

二叉树遍历 

前  中  后    （父节点）

#索引 ----- 二叉树、平衡二叉树、b-tree、b+tree

二叉树具有以下性质：左子树的键值小于根的键值，
右子树的键值大于根的键值。

平衡二叉树（AVL树）在符合二叉查找树的条件下，
还满足任何节点的两个子树的高度最大差为1 

B-Tree(平衡多路查找树)是为磁盘等外存储设备设计的一种平衡查找树
系统从磁盘读取数据到内存时是以磁盘块（block）为基本单位的，
位于同一个磁盘块中的数据会被一次性读取出来，而不是需要什么取什么。

B+Tree相对于B-Tree有几点不同：

非叶子节点只存储键值信息。
所有叶子节点之间都有一个链指针。
数据记录都存放在叶子节点中


B树每个结点可以有n个元素和n+1个孩子，减少树的高度，减少树的度，
所以可以降低内存读取外存的次数；( 对二叉查找树的改进。它的设计思想是
，将相关数据尽量集中在一起，以便一次读取多个数据，减少硬盘操作次数）


